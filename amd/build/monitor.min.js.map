{"version":3,"file":"monitor.min.js","sources":["../src/monitor.js"],"sourcesContent":["define(['jquery'], function ($) {\n    return {\n        init: function (params) {\n            const interval = params.interval || 5000;\n            const quizid = params.quizid;\n            const cmid = params.cmid;\n            const userid = params.userid;\n            const attemptid = params.attemptid;\n            const token = params.token;\n            const uploadurl = params.uploadurl;\n\n            let startButtonClicked = false;\n            let extensionResponded = false;\n\n            function sendStartCapture() {\n                const metadata = {\n                    interval: interval,\n                    quizid: quizid,\n                    cmid: cmid,\n                    userid: userid,\n                    attemptid: attemptid,\n                    uploadurl: uploadurl\n                };\n\n                // Listen for extension reply\n                function waitForExtensionResponse() {\n                    setTimeout(() => {\n                        if (!extensionResponded) {\n                            alert('‚ö†Ô∏è Moodle Screen Capture Extension is not installed or not running.\\n\\nPlease install and enable the extension before starting the quiz.');\n                            startButtonClicked = false;\n                        }\n                    }, 1000); // 1 second timeout\n                }\n\n                extensionResponded = false; // reset\n                window.postMessage({\n                    type: 'FROM_MOODLE',\n                    action: 'startCapture',\n                    interval: interval,\n                    meta: metadata\n                }, '*');\n                waitForExtensionResponse();\n            }\n\n            function sendStopCapture() {\n                window.postMessage({\n                    type: 'FROM_MOODLE',\n                    action: 'stopCapture'\n                }, '*');\n            }\n\n            // Trigger on start button click\n            $(document).on('click', 'form[action*=\"startattempt.php\"] button[type=submit]', function (e) {\n                e.preventDefault();\n                if (!startButtonClicked) {\n                    sendStartCapture();\n                    startButtonClicked = true;\n                }\n            });\n\n            // Listen for extension response\n            window.addEventListener('message', function (event) {\n                if (event.source !== window || !event.data || event.data.type !== 'FROM_EXTENSION') return;\n\n                const msg = event.data;\n\n                if (msg.status === 'extensionPresent') {\n                    extensionResponded = true; // ‚úÖ Extension responded early\n                    console.log('üß© Extension confirmed installed');\n                }\n\n                if (msg.status === 'captureStarted' || msg.status === 'already_open') {\n                    extensionResponded = true;\n                    const form = $('form[action*=\"startattempt.php\"]')[0];\n                    if (form) form.submit();\n                }\n\n                if (msg.status === 'captureFailed') {\n                    extensionResponded = true;\n                    alert('‚ùå Screen sharing was cancelled or failed. You are being redirected to the quiz page.');\n\n                    const cmid = params.cmid;\n                    if (cmid) {\n                        window.location.href = M.cfg.wwwroot + '/mod/quiz/view.php?id=' + cmid;\n                    } else {\n                        window.location.href = M.cfg.wwwroot + '/mod/quiz/';\n                    }\n                }\n            });\n\n            $(document).on('click', 'button[type=submit]', function () {\n                const text = this.textContent.trim().toLowerCase();\n                if (text.includes('submit all and finish') || text.includes('finish attempt') || text.includes('submit quiz')) {\n                    sendStopCapture();\n                }\n            });\n            if (window.location.pathname.includes('attempt.php')) {\n                console.log('üìå This is attempt page');\n\n                // Retry-based ping popup status checker\n                function checkPopupOpenStatus(maxRetries = 3, delay = 500) {\n                    return new Promise((resolve) => {\n                        let attempt = 0;\n\n                        function tryPing() {\n                            let responded = false;\n\n                            function onMessage(event) {\n                                if (event.source !== window || !event.data || event.data.type !== 'FROM_EXTENSION') return;\n\n                                if (event.data.status === 'popupStatus') {\n                                    window.removeEventListener('message', onMessage);\n                                    responded = true;\n                                    resolve(event.data.popupOpen);\n                                }\n                            }\n\n                            window.addEventListener('message', onMessage);\n\n                            // Send pingPopup message to extension\n                            window.postMessage({\n                                type: 'FROM_MOODLE',\n                                action: 'pingPopup'\n                            }, '*');\n\n                            // Timeout fallback if no response\n                            setTimeout(() => {\n                                window.removeEventListener('message', onMessage);\n                                if (!responded) {\n                                    attempt++;\n                                    if (attempt < maxRetries) {\n                                        setTimeout(tryPing, delay); // Retry after delay\n                                    } else {\n                                        resolve(false); // All attempts failed\n                                    }\n                                }\n                            }, 1000); // Wait 1s for response\n                        }\n\n                        tryPing(); // Start first attempt\n                    });\n                }\n\n                // Run popup status check\n                checkPopupOpenStatus().then(isOpen => {\n                    console.log('üì° Extension popup open?', isOpen);\n                    if (!isOpen) {\n                        console.warn('‚ö†Ô∏è Extension popup is NOT open.');\n                        alert('‚ö†Ô∏è You must enable screen sharing to attempt this quiz.\\n\\nRedirecting to quiz page.');\n\n                        const cmid = params.cmid;\n                        if (cmid) {\n                            window.location.href = M.cfg.wwwroot + '/mod/quiz/view.php?id=' + cmid;\n                        } else {\n                            window.location.href = M.cfg.wwwroot + '/mod/quiz/';\n                        }\n                    }\n                });\n            }\n        }\n    };\n});\n"],"names":["define","$","init","params","interval","quizid","cmid","userid","attemptid","uploadurl","token","startButtonClicked","extensionResponded","document","on","e","preventDefault","metadata","window","postMessage","type","action","meta","setTimeout","alert","sendStartCapture","addEventListener","event","source","data","msg","status","console","log","form","submit","location","href","M","cfg","wwwroot","text","this","textContent","trim","toLowerCase","includes","pathname","maxRetries","delay","Promise","resolve","attempt","tryPing","responded","onMessage","removeEventListener","popupOpen","checkPopupOpenStatus","then","isOpen","warn"],"mappings":"AAAAA,6CAAO,CAAC,WAAW,SAAUC,SAClB,CACHC,KAAM,SAAUC,cACNC,SAAWD,OAAOC,UAAY,IAC9BC,OAASF,OAAOE,OAChBC,KAAOH,OAAOG,KACdC,OAASJ,OAAOI,OAChBC,UAAYL,OAAOK,UAEnBC,WADQN,OAAOO,MACHP,OAAOM,eAErBE,oBAAqB,EACrBC,oBAAqB,KAwCzBX,EAAEY,UAAUC,GAAG,QAAS,wDAAwD,SAAUC,GACtFA,EAAEC,iBACGL,uCAvCCM,SAAW,CACbb,SAAUA,SACVC,OAAQA,OACRC,KAAMA,KACNC,OAAQA,OACRC,UAAWA,UACXC,UAAWA,WAafG,oBAAqB,EACrBM,OAAOC,YAAY,CACfC,KAAM,cACNC,OAAQ,eACRjB,SAAUA,SACVkB,KAAML,UACP,KAdCM,YAAW,KACFX,qBACDY,MAAM,4IACNb,oBAAqB,KAE1B,KAwBHc,GACAd,oBAAqB,MAK7BO,OAAOQ,iBAAiB,WAAW,SAAUC,UACrCA,MAAMC,SAAWV,SAAWS,MAAME,MAA4B,mBAApBF,MAAME,KAAKT,KAA2B,aAE9EU,IAAMH,MAAME,QAEC,qBAAfC,IAAIC,SACJnB,oBAAqB,EACrBoB,QAAQC,IAAI,qCAGG,mBAAfH,IAAIC,QAA8C,iBAAfD,IAAIC,OAA2B,CAClEnB,oBAAqB,QACfsB,KAAOjC,EAAE,oCAAoC,GAC/CiC,MAAMA,KAAKC,YAGA,kBAAfL,IAAIC,OAA4B,CAChCnB,oBAAqB,EACrBY,MAAM,8FAEAlB,KAAOH,OAAOG,KAEhBY,OAAOkB,SAASC,KADhB/B,KACuBgC,EAAEC,IAAIC,QAAU,yBAA2BlC,KAE3CgC,EAAEC,IAAIC,QAAU,iBAKnDvC,EAAEY,UAAUC,GAAG,QAAS,uBAAuB,iBACrC2B,KAAOC,KAAKC,YAAYC,OAAOC,eACjCJ,KAAKK,SAAS,0BAA4BL,KAAKK,SAAS,mBAAqBL,KAAKK,SAAS,iBA/C/F5B,OAAOC,YAAY,CACfC,KAAM,cACNC,OAAQ,eACT,QAgDHH,OAAOkB,SAASW,SAASD,SAAS,eAAgB,CAClDd,QAAQC,IAAI,0CAGkBe,kEAAa,EAAGC,6DAAQ,WAC3C,IAAIC,SAASC,cACZC,QAAU,YAELC,cACDC,WAAY,WAEPC,UAAU5B,OACXA,MAAMC,SAAWV,QAAWS,MAAME,MAA4B,mBAApBF,MAAME,KAAKT,MAE/B,gBAAtBO,MAAME,KAAKE,SACXb,OAAOsC,oBAAoB,UAAWD,WACtCD,WAAY,EACZH,QAAQxB,MAAME,KAAK4B,YAI3BvC,OAAOQ,iBAAiB,UAAW6B,WAGnCrC,OAAOC,YAAY,CACfC,KAAM,cACNC,OAAQ,aACT,KAGHE,YAAW,KACPL,OAAOsC,oBAAoB,UAAWD,WACjCD,YACDF,UACIA,QAAUJ,WACVzB,WAAW8B,QAASJ,OAEpBE,SAAQ,MAGjB,KAGPE,MAKRK,GAAuBC,MAAKC,YACxB5B,QAAQC,IAAI,2BAA4B2B,SACnCA,OAAQ,CACT5B,QAAQ6B,KAAK,mCACbrC,MAAM,8FAEAlB,KAAOH,OAAOG,KAEhBY,OAAOkB,SAASC,KADhB/B,KACuBgC,EAAEC,IAAIC,QAAU,yBAA2BlC,KAE3CgC,EAAEC,IAAIC,QAAU"}