{"version":3,"file":"monitor.min.js","sources":["../src/monitor.js"],"sourcesContent":["define(['jquery'], function ($) {\n    return {\n        init: function (params) {\n            const interval = params.interval || 5000;\n            \n            let startButtonClicked = false;\n\n            function sendStartCapture() {\n                \n\n                console.log('ðŸ“¤ Sending startCapture request to extension...');\n                window.postMessage({\n                    type: 'FROM_MOODLE',\n                    action: 'startCapture',\n                    interval: interval\n                }, '*');\n            }\n\n            function sendStopCapture() {\n                console.log('ðŸ“¤ Sending stopCapture request to extension...');\n                window.postMessage({\n                    type: 'FROM_MOODLE',\n                    action: 'stopCapture'\n                }, '*');\n            }\n\n            $(document).on('click', 'form[action*=\"startattempt.php\"] button[type=submit]', function (e) {\n                e.preventDefault();\n                if (!startButtonClicked) {\n                    sendStartCapture();\n                    startButtonClicked = true;\n                }\n            });\n\n            window.addEventListener('message', function (event) {\n                if (event.source !== window || !event.data || event.data.type !== 'FROM_EXTENSION') return;\n                const msg = event.data;\n\n                if (msg.status === 'captureStarted') {\n                    const form = $('form[action*=\"startattempt.php\"]')[0];\n                    if (form) {\n                        form.submit();\n                    }\n                } else if (msg.status === 'captureFailed') {\n                    alert('Screen sharing was cancelled or failed. Please try again.');\n                    startButtonClicked = false;\n                }\n            });\n\n            $(document).on('click', 'button[type=submit]', function () {\n                const text = this.textContent.trim().toLowerCase();\n                if (text.includes('submit all and finish') || text.includes('finish attempt') || text.includes('submit quiz')) {\n                    sendStopCapture();\n                }\n            });\n        }\n    };\n});\n"],"names":["define","$","init","params","interval","startButtonClicked","document","on","e","preventDefault","console","log","window","postMessage","type","action","addEventListener","event","source","data","msg","status","form","submit","alert","text","this","textContent","trim","toLowerCase","includes"],"mappings":"AAAAA,6CAAO,CAAC,WAAW,SAAUC,SAClB,CACHC,KAAM,SAAUC,cACNC,SAAWD,OAAOC,UAAY,QAEhCC,oBAAqB,EAqBzBJ,EAAEK,UAAUC,GAAG,QAAS,wDAAwD,SAAUC,GACtFA,EAAEC,iBACGJ,qBAlBLK,QAAQC,IAAI,mDACZC,OAAOC,YAAY,CACfC,KAAM,cACNC,OAAQ,eACRX,SAAUA,UACX,KAeCC,oBAAqB,MAI7BO,OAAOI,iBAAiB,WAAW,SAAUC,UACrCA,MAAMC,SAAWN,SAAWK,MAAME,MAA4B,mBAApBF,MAAME,KAAKL,KAA2B,aAC9EM,IAAMH,MAAME,QAEC,mBAAfC,IAAIC,OAA6B,OAC3BC,KAAOrB,EAAE,oCAAoC,GAC/CqB,MACAA,KAAKC,aAEa,kBAAfH,IAAIC,SACXG,MAAM,6DACNnB,oBAAqB,MAI7BJ,EAAEK,UAAUC,GAAG,QAAS,uBAAuB,iBACrCkB,KAAOC,KAAKC,YAAYC,OAAOC,eACjCJ,KAAKK,SAAS,0BAA4BL,KAAKK,SAAS,mBAAqBL,KAAKK,SAAS,kBAhC/FpB,QAAQC,IAAI,kDACZC,OAAOC,YAAY,CACfC,KAAM,cACNC,OAAQ,eACT"}